// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package hwpe_buffer_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 3;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    logic [31:0] q;
  } hwpe_buffer_reg2hw_data_in_reg_t;

  typedef struct packed {
    logic [31:0] d;
  } hwpe_buffer_hw2reg_data_out_reg_t;

  // Register -> HW type
  typedef struct packed {
    hwpe_buffer_reg2hw_data_in_reg_t data_in; // [31:0]
  } hwpe_buffer_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    hwpe_buffer_hw2reg_data_out_reg_t data_out; // [31:0]
  } hwpe_buffer_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] HWPE_BUFFER_DATA_IN_OFFSET = 3'h 0;
  parameter logic [BlockAw-1:0] HWPE_BUFFER_DATA_OUT_OFFSET = 3'h 4;

  // Reset values for hwext registers and their fields
  parameter logic [31:0] HWPE_BUFFER_DATA_OUT_RESVAL = 32'h 0;

  // Register index
  typedef enum int {
    HWPE_BUFFER_DATA_IN,
    HWPE_BUFFER_DATA_OUT
  } hwpe_buffer_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] HWPE_BUFFER_PERMIT [2] = '{
    4'b 1111, // index[0] HWPE_BUFFER_DATA_IN
    4'b 1111  // index[1] HWPE_BUFFER_DATA_OUT
  };

endpackage

